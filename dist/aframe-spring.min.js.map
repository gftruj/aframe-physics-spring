{"version":3,"file":"aframe-spring.min.js","sources":["../src/spring.js"],"sourcesContent":["/* globals AFRAME */\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME' +\n    ' was available.');\n}\n\n/* globals CANNON */\nif (typeof CANNON === 'undefined') {\n  throw new Error('Component attempted to register before Cannon.js' +\n    ' was available.');\n}\n\nAFRAME.registerComponent(\"spring\", {\n  schema: {\n    target: {\n      type: 'selector'\n    },\n    restLength: {\n      default: 1\n    },\n    stiffness: {\n      default: 100\n    },\n    damping: {\n      default: 1\n    },\n  },\n  dependencies: ['physics'],\n  multiple: true,\n  init: function() {\n    let el = this.el\n    this.spring = null\n    if (this.el.body) {\n      this.createSpring()\n    } else {\n      this.el.addEventListener(\"body-loaded\", () => {\n        this.createSpring()\n      })\n    }\n  },\n  update: function(oldData, newData) {\n    this.updateSpring(oldData)\n  },\n  updateSpring: function(oldData) {\n    let data = this.data\n    if (!this.spring) {\n      console.warn(\"Component attempted to change spring before its created. No changes made.\");\n      return;\n    } else if (!data.target) {\n      console.warn(\"Invalid target specified. No changes made.\");\n      return;\n    }\n    Object.keys(data).forEach((attr) => {\n      if (data[attr] !== oldData[attr]) {\n        if (attr === \"target\") {\n          this.spring.bodyB = data.target.body\n          return\n        }\n        this.spring[attr] = data[attr]\n      }\n    })\n  },\n  createSpring: function() {\n    let data = this.data\n    if (!this.dataIsValid(data)) return;\n    this.spring = new CANNON.Spring(this.el.body, data.target.body, {\n      restLength: data.restLength,\n      stiffness: 100,\n      damping: 1,\n    });\n    // Compute the force after each step\n    this.el.sceneEl.systems.physics.driver.world.addEventListener(\"postStep\", (event) => {\n      this.spring.applyForce();\n    });\n  },\n  dataIsValid: function(data) {\n    if (!data.target) return false\n    return true\n  }\n})\n"],"names":["AFRAME","Error","CANNON","registerComponent","schema","target","type","restLength","default","stiffness","damping","dependencies","multiple","init","this","el","spring","body","createSpring","addEventListener","update","oldData","newData","updateSpring","data","Object","keys","forEach","attr","bodyB","console","warn","dataIsValid","Spring","sceneEl","systems","physics","driver","world","event","applyForce"],"mappings":"yBACA,GAAsB,oBAAXA,OACT,MAAM,IAAIC,MAAM,gEAKlB,GAAsB,oBAAXC,OACT,MAAM,IAAID,MAAM,mEAIlBD,OAAOG,kBAAkB,UACvBC,QACEC,QACEC,KAAM,YAERC,YACEC,QAAS,GAEXC,WACED,QAAS,KAEXE,SACEF,QAAS,IAGbG,cAAe,WACfC,UAAU,EACVC,KAAM,WACKC,KAAKC,GACdD,KAAKE,OAAS,KACVF,KAAKC,GAAGE,KACVH,KAAKI,eAELJ,KAAKC,GAAGI,iBAAiB,cAAe,KACtCL,KAAKI,kBAIXE,OAAQ,SAASC,EAASC,GACxBR,KAAKS,aAAaF,IAEpBE,aAAc,SAASF,GACrB,IAAIG,EAAOV,KAAKU,KACXV,KAAKE,OAGEQ,EAAKnB,OAIjBoB,OAAOC,KAAKF,GAAMG,QAASC,IACzB,GAAIJ,EAAKI,KAAUP,EAAQO,GAAO,CAChC,GAAa,WAATA,EAEF,YADAd,KAAKE,OAAOa,MAAQL,EAAKnB,OAAOY,MAGlCH,KAAKE,OAAOY,GAAQJ,EAAKI,MAT3BE,QAAQC,KAAK,8CAHbD,QAAQC,KAAK,8EAgBjBb,aAAc,WACZ,IAAIM,EAAOV,KAAKU,KACXV,KAAKkB,YAAYR,KACtBV,KAAKE,OAAS,IAAId,OAAO+B,OAAOnB,KAAKC,GAAGE,KAAMO,EAAKnB,OAAOY,MACxDV,WAAYiB,EAAKjB,WACjBE,UAAW,IACXC,QAAS,IAGXI,KAAKC,GAAGmB,QAAQC,QAAQC,QAAQC,OAAOC,MAAMnB,iBAAiB,WAAaoB,IACzEzB,KAAKE,OAAOwB,iBAGhBR,YAAa,SAASR,GACpB,QAAKA,EAAKnB"}