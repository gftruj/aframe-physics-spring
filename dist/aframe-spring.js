!function(){"use strict";if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");if("undefined"==typeof CANNON)throw new Error("Component attempted to register before Cannon.js was available.");AFRAME.registerComponent("spring",{schema:{target:{type:"selector"},restLength:{default:1},stiffness:{default:100},damping:{default:1}},dependencies:["physics"],multiple:!0,init:function(){this.el;this.spring=null,this.el.body?this.createSpring():this.el.addEventListener("body-loaded",()=>{this.createSpring()})},update:function(e,t){this.updateSpring(e)},updateSpring:function(e){let t=this.data;this.spring?t.target?Object.keys(t).forEach(n=>{if(t[n]!==e[n]){if("target"===n)return void(this.spring.bodyB=t.target.body);this.spring[n]=t[n]}}):console.warn("Invalid target specified. No changes made."):console.warn("Component attempted to change spring before its created. No changes made.")},createSpring:function(){let e=this.data;this.dataIsValid(e)&&(this.spring=new CANNON.Spring(this.el.body,e.target.body,{restLength:e.restLength,stiffness:100,damping:1}),this.el.sceneEl.systems.physics.driver.world.addEventListener("postStep",e=>{this.spring.applyForce()}))},dataIsValid:function(e){return!!e.target}})}();
//# sourceMappingURL=aframe-spring.js.map
